üßæ User Story 1: Add a new media note
As a user
I want to add a new media note (Cinema, Book, or Song)
So that I can keep track of what I plan to watch, read, or listen to.

‚úÖ Acceptance Criteria:
The bot asks the user to choose a category: Cinema, Book, or Song.

The bot then asks the user to enter the name of the media item.

The bot asks the user to enter the author/director/performer.

The note is saved to the database with the following fields:

name (text)

author (text)

category (text enum: Cinema, Book, Song)

status (text, default is planned)

created_at (timestamp, automatically filled with current date/time)

The bot confirms the note has been saved.



üßæ User Story 2: View media notes
As a user
I want to view my saved media notes by category
So that I can see what I‚Äôve added and plan to enjoy.

‚úÖ Acceptance Criteria:
The bot asks the user to select a category: Cinema, Book, or Song.

The bot retrieves all media notes in the selected category.

The notes are sorted by creation date from oldest to newest.

The bot displays the following fields for each note:

name

author

status



üßæ User Story 3: Show media notes after adding one
As a user
I want to immediately see the updated list after adding a new media note
So that I can confirm the note was added and review other saved items in that category.

‚úÖ Acceptance Criteria:
After successfully saving a new media note (as per Story 1):

The bot automatically retrieves and displays all media notes (with AC from US2) in the selected category.


‚úÖ User Story 4 ‚Äî Authorization via Telegram ID
As a Telegram user
I want my media notes to be associated with my Telegram ID
So that I can store and view my own private list of books, movies, and songs

Acceptance Criteria:
When a user interacts with the bot for the first time, their Telegram ID is saved to a users table.

Each media note is linked to a user_id via foreign key.

All commands (add, show) only work with the notes belonging to the current user.

If a user is already in the database, no duplicate is added.



üß© User Story 5: Update note status
As a user,
I want to mark a note as ‚Äúdone‚Äù or change its status,
So that I can track which items I‚Äôve already completed.

‚úÖ Acceptance Criteria:

I can trigger a command like ‚ÄúUpdate status‚Äù

The bot asks me to choose a category and then shows notes from that category

I select the note to update

The bot asks me to choose a new status from a predefined list (e.g., planned,  done)

The status is updated in the database, and I get a confirmation



üß© User Story 6: Autocomplete media info with AI
As a user,
I want the bot to auto-complete missing author/director/artist info using ChatGPT API based on the title,
So that I don‚Äôt have to manually fill in details when adding a new note.

‚úÖ Acceptance Criteria:

When adding a note, I can skip entering the author/creator

The bot calls the ChatGPT API to fill in missing details

The response includes a suggested name, which is shown to the user for confirmation

If accepted, the note is saved with the AI-suggested data