üßæ User Story 1: Add a new media note
As a user
I want to add a new media note (Cinema, Book, or Song)
So that I can keep track of what I plan to watch, read, or listen to.

‚úÖ Acceptance Criteria:

After clicking button "New" The bot asks the user to choose a category: Cinema, Book, or Song.

The bot then asks the user to enter the name of the media item.

The note is saved to the database with the following fields:

	name (text)

	category (text enum: Cinema, Book, Song)

	status (text, default is planned)

	created_at (timestamp, automatically filled with current date/time)

The bot confirms the note has been saved  
the bot Shows buttons "New", "View"


üßæ User Story 2: View media notes
As a user
I want to view my saved media notes by category
So that I can see what I‚Äôve added and plan to enjoy.

‚úÖ Acceptance Criteria:
After clicking button "View" The bot asks the user to select a category: Cinema, Book, or Song.

The bot retrieves all media notes in the selected category.

The notes are sorted by creation date from oldest to newest.

The bot displays the following fields for each note:

	iterative number (emodji of each digit)

	name

	status - shows ‚úÖ id done and nothing if planned

the bot Shows buttons "Mark|Unmark", "Delete", "Back".


üßæ User Story 3: Show media notes after adding one
As a user
I want to immediately see the updated list after adding a new media note
So that I can confirm the note was added and review other saved items in that category.

‚úÖ Acceptance Criteria:
After successfully saving a new media note (as per Story 1):

The bot automatically retrieves and displays all media notes (with AC from US2) in the selected category.

the bot Shows buttons "Mark|Unmark", "Delete", "Back".


‚úÖ User Story 4 ‚Äî Authorization via Telegram ID
As a Telegram user
I want my media notes to be associated with my Telegram ID
So that I can store and view my own private list of books, movies, and songs

Acceptance Criteria:
When a user interacts with the bot for the first time, their Telegram ID is saved to a users table.

Each media note is linked to a user_id via foreign key.

All commands (add, show) only work with the notes belonging to the current user.

If a user is already in the database, no duplicate is added.



üß© User Story 5: Update note status
As a user,
I want to mark a note as ‚Äúdone‚Äù or change its status,
So that I can track which items I‚Äôve already completed.

‚úÖ Acceptance Criteria:

I can trigger a command like Update status clicking button "Mark|Unmark" after View action, when list has been shown

The bot asks me to choose a number to change status

I type the number to update

The bot changing status of the note from Planned to Done or opposite in database, and I get a confirmation

The bot updates last list and I see status of relevant note updated

the bot Shows buttons "Mark|Unmark", "Delete", "Back".


üß© User Story 5: Delete note
As a user,
I want to delete a note from the category,
So that I can keep my list up to date.

‚úÖ Acceptance Criteria:

I can trigger a command like delete note clicking button "Mark|Unmark" after View action, when list has been shown

The bot asks me to choose a number 

I type the number to delete note

The bot delete selected note, and I get a confirmation

The bot updates last list and I see 1 note less

the bot Shows buttons "Mark|Unmark", "Delete", "Back".

üß© User Story 7: Button back implementation
As a user,
I want to come back to main menu in the middle of the flow,
So that I can have excellent navigation even if I changed my mind 

‚úÖ Acceptance Criteria:

At the every moment I can stop journey and start from the beginning without issues

the bot Shows buttons "New", "View", "Back" and has cleaned context

It should be possible on Category selection, during view mode, inserting Name for the note, numbers to select note for status change or deletion.


üß© User Story 8: Autocomplete media info with AI
As a user,
I want the bot to auto-complete missing author/director/artist info using ChatGPT API based on the title,
So that I don‚Äôt have to manually fill in details when adding a new note.

‚úÖ Acceptance Criteria:

When adding a note, I can skip entering the author/creator

The bot calls the ChatGPT API to fill in missing details

The response includes a suggested name, which is shown to the user for confirmation

If accepted, the note is saved with the AI-suggested data