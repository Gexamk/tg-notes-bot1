### bot/handlers.py

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
import db
from db.models import User, MediaNote, get_user_id_by_telegram_id
from .keyboards import CATEGORY_KEYBOARD, CATEGORY_MARKUP, MAIN_KEYBOARD, MAIN_MARKUP, VIEW_KEYBOARD, VIEW_MARKUP
import bot.add_note, bot.view_notes

#general handlers like start and select category

def number_to_emoji(num: int) -> str:
    emoji_map = {
        "0": "0Ô∏è‚É£", "1": "1Ô∏è‚É£", "2": "2Ô∏è‚É£", "3": "3Ô∏è‚É£", "4": "4Ô∏è‚É£",
        "5": "5Ô∏è‚É£", "6": "6Ô∏è‚É£", "7": "7Ô∏è‚É£", "8": "8Ô∏è‚É£", "9": "9Ô∏è‚É£"
    }
    return "".join(emoji_map[d] for d in str(num))


async def reset_context(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=MAIN_MARKUP
    )


async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_user_id = update.effective_user.id
    first_name = update.effective_user.first_name
    language_code = update.effective_user.language_code
    
    User.get_or_create(tg_user_id, first_name,  language_code)

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã, –∫–Ω–∏–≥–∏ –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=MAIN_MARKUP
    )


async def handle_category_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    category_map = {
        "üé¨ Cinema": "Cinema",
        "üìö Book": "Book",
        "üõí Shop": "Shop",
        "üìå Note": "Note",
        "üßæ To Do": "To Do"
    }
    category = category_map.get(text)
    if not category:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")
        return

    #breakpoint()
    mode = context.user_data.get("mode")

    if mode == "add":
        context.user_data["category"] = category
        context.user_data["awaiting_title"] = True
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")

    elif mode == "view":
        tg_user_id = update.effective_user.id
        await bot.view_notes.show_notes_by_category(update, context, tg_user_id, category)

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: New –∏–ª–∏ View.")





    


        