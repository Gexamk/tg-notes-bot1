import logging
import asyncio
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, ContextTypes, MessageHandler, CommandHandler, filters
from config import BOT_TOKEN, WEBHOOK_SECRET_TOKEN
from bot.router import handle_menu_and_typing
from bot.handlers import handle_start


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# Telegram Application
telegram_app = Application.builder().token(BOT_TOKEN).build()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram
async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info(f"üì© Message from user: {update.message.text}")
    await update.message.reply_text("‚úÖ –ü—Ä–∏–Ω—è–ª!")

telegram_app.add_handler(CommandHandler("start", handle_start))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu_and_typing))

# Webhook-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('X-Telegram-Bot-Api-Secret-Token') != WEBHOOK_SECRET_TOKEN:
        return 'Unauthorized', 401

    try:
        update = Update.de_json(request.get_json(force=True), telegram_app.bot)
        logging.info("‚úÖ Update received and added to queue")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –±–µ–∑–æ–ø–∞—Å–Ω–æ
        asyncio.get_event_loop().create_task(telegram_app.process_update(update))
        
    except Exception:
        logging.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")

    return 'OK'

# –ó–∞–ø—É—Å–∫ Telegram Application
async def run_telegram():
    await telegram_app.initialize()
    await telegram_app.start()
    logging.info("üöÄ Telegram dispatcher is running")

# –ó–∞–ø—É—Å–∫ Flask + Telegram
if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(run_telegram())
    logging.info("üåê Flask app starting on port 8080")
    app.run(host="0.0.0.0", port=8080)